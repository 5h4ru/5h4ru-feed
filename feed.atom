<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://5h4ru.github.io/5h4ru-feed/index.html</id>
    <title>5h4ru-feed</title>
    <updated>2022-03-30T00:56:28.992Z</updated>
    <generator>osmosfeed 1.14.4</generator>
    <link rel="alternate" href="https://5h4ru.github.io/5h4ru-feed/index.html"/>
    <link rel="self" href="https://5h4ru.github.io/5h4ru-feed/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[22/3/27 お題箱97：統計コンペ、ホロライブ最強議論、資格勉強etc]]></title>
        <id>hatenablog://entry/13574176438074343964</id>
        <link href="https://saize-lw.hatenablog.com/entry/2022/03/27/190658"/>
        <updated>2022-03-27T10:06:58.000Z</updated>
        <summary type="html"><![CDATA[お題箱97

399.統計検定合格おめです。
個人的に興味あるので Kaggle とか TopCoder Marathon Match, AtCoder Heuristic Contest, Codingame, その他データサイエンス系コンペ みたいな統計スキルが直結するタイプのコンペに出てみて結果教えて欲しいです。
ありがとうございます。
データサイエンス系の資格は他にもいくつか取得しようと思っていますが、コンペ・コンテスト系の催しにはほとんど関心がないです。それは現在のところ僕は実世界を改善することを目指すエンジニアではなく数学的な理論を楽しむディレッタントだからです。僕の主目的は自分の知識のスキルツリーを育てることで、現実の課題に対してソリューションを得ることではありません。
補足412：全てにおいてそうというわけではないですが、僕はスキルツリーを確実に育てたいがために一度得た知識がすぐ型落ちになる事態を嫌うことがあり、その傾向性は「すぐに却下される可能性がある最新の知識を追わず、自然淘汰を経て定着した知識を回収しようとする」＝「意識的にレイトマジョリティでいようとする」挙動として発現します。例えば僕が技術的な知識にアクセスする目安は「オライリーが日本語訳の解説書を出す」くらいの段階です。その段階はもう自分で最新の英語論文にアクセスできるようなアーリーアダプター層が吟味し尽くして生き残った知識の上澄みが日本語の簡単な解説書しか読まない情報弱者向けにようやく降ろされてくるフェイズで、それ故に定着されるべき知識であると判断できるからです。
とはいえホワイトボードとペン基準の知識しか持っておらず実装が全くわからないのもどうだろうという気持ちはあるので、基礎的な実装に関する知識だけ軽く齧る目的で少し参加するのはアリです。もしかしたら僕が常に持っているゲーム志向がコンペにカチ…]]></summary>
        <author>
            <name>LWのサイゼリヤ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WordPressテーマ「Odamaki」作成進捗2（ツー）と雑記]]></title>
        <id>https://yokkin.com/?p=2076</id>
        <link href="https://yokkin.com/blog/220327.html"/>
        <updated>2022-03-26T15:57:59.000Z</updated>
        <summary type="html"><![CDATA[Odamaki とりあえずテーマ名がOdamakiになりましたーやったー。一応オープンソース（笑）。 もちろんオダマキソウから取ってる。 今はなにやってるかというと、素のPHPを何とかいじれるレベルまで成長したので1年ぶ […]]]></summary>
        <author>
            <name>Yokkin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[シャワーヘッドが低い位置にあるのはそれに頭を垂れるためだ]]></title>
        <id>https://not-miso-inside.netlify.com/blog/shower-head/</id>
        <link href="https://not-miso-inside.netlify.com/blog/shower-head/"/>
        <updated>2022-03-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[新作が出た（URLに注目）。宣伝ツイがこれだ。]]></summary>
        <author>
            <name>みそは入ってませんけど</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[雑記　OBSに向かって喋ったら尚良かった話/ワクワクワクチンチンチン]]></title>
        <id>hatenablog://entry/13574176438075380491</id>
        <link href="https://naari.hatenablog.com/entry/2022/03/26/035023"/>
        <updated>2022-03-25T18:50:23.000Z</updated>
        <summary type="html"><![CDATA[先日投稿した Visual Studio CodeでSpigotのnms依存なプラグイン開発を行うには - 名有りさんの日記 という記事の最後に今回の内容についてひたすら30分喋り続ける動画を貼ったのだが、時系列的にはまず先にこの動画を作り、その次に記事を作るという流れだった。これが結構良くて、キーボードを叩くより先にある程度の段階までの言語化を達成することができたので記事作成がかなりスムーズだった。特に書かなければならないことの順序立てとか、どのレベルで詳細を書くべきか？みたいな部分は先に動画を作ったこともあって記事作成段階で完全に決定できていた。このあたりの言語化の話は アヒルのおもちゃとかテディーベアとかと話して解決するやつ - 名有りさんの日記 で書いたんだけど、これを記事作成に反映することができた形になると思う。もしかして、普段やってるツイキャスとかも喋ってる内容をそのまま文字起こしすればひとつの記事になるんじゃないか？？とか思った。
本当に良くないんですが、生協で定期的に買っている食パンを食べきる前にカビらせることが多くなってきた。単に飽きたのだと思う。とりあえず注文を停止して、今はもう別のものを頼むようにした。同じ値段帯で定期的に別の「朝食になりうるもの」を届けてくれる何かとか存在しないかなあ、とにかく食事の用意が面倒なので極力簡潔に、かつ上記の問題を解決できるようにしたい。
ワクチンの3回目の機会があり、かつ今回も職域接種だったのでそのために久々に物理出社した。出社が久々すぎてどうすれば会社に辿り着けるか一瞬わからなくてちょっと焦った。

出社が久々すぎて何も見ずに帰るやつ出来なくなってる
案内板とにらめっこしてます
— 名有り (@naari_) 2022年3月24日
  
接種前は勿論仕事をするのでフリーアドレスになった机を適当に選んで仕事していたが、か…]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[遅く来たりて早く行く]]></title>
        <id>https://not-miso-inside.netlify.com/blog/come-slow-go-fast/</id>
        <link href="https://not-miso-inside.netlify.com/blog/come-slow-go-fast/"/>
        <updated>2022-03-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[まず私を罰して欲しい。なぜか？　次の文章を見てくれ。これは先日のブログからの引用だ。
VGプラスで来週に新作が出る。
これは真っ赤な嘘だった。本当は26日に新作が出る。本当に申し訳ない。どうしてこうなったのか自分でもよくわからない……でも精神ははっきりしてました……誰でもよかった……できごころだった……弱そうなやつを狙ってやった……そうです……おまわりさんの言うとおりですよ……。]]></summary>
        <author>
            <name>みそは入ってませんけど</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Visual Studio CodeでSpigotのnms依存なプラグイン開発を行うには]]></title>
        <id>hatenablog://entry/13574176438075377291</id>
        <link href="https://naari.hatenablog.com/entry/2022/03/22/004725"/>
        <updated>2022-03-21T15:47:25.000Z</updated>
        <summary type="html"><![CDATA[Javaのエコシステムをわからない所から頑張って諸々覚えた。半分はべつにvscodeの話ではないが、今回のじぶんの環境がvscodeだったのでそのようにタイトルに付けることにした。
tl; dr
もちろんBuildToolsを使用してビルドをする必要がある
Java Decompilerをインストールする


Spigot APIは --generate-sources して *-sources.jar を入れると良い
--remapped してmapsを考慮したビルドを行うようにする
なにか問題が起きたときはちょっと待つか、WSL2を使う？？
nmsへの依存を複数バージョンにまたがって実現できるようにするには
nmsって何、という人向けセクション
知っていれば飛ばしてください。
Spigotで使えるプラグインを作成する際、spigot-api に依存することになる。これはSpigotのうち、開発者に対して大まかな互換性の保証をもてる範囲のAPIだけを集めたものとなる。主に org.bukkit.* (以下bukkit)が対象。では、この「範囲」というのはどういう意味なのか？についてだが、まずは下のレイヤーから順番に説明する。
まず最初に来るのが net.minecraft.server (これの頭文字をとってnms。以降もnmsと表記する)。こちらはバニラのMinecraftのサーバーを起動する時に動作するプログラムとおおよそ同じものだと捉えてよいものとなる。これはバージョンアップごとに大きく変動する可能性があり*1、サーバーに対して変更を加えたい開発者からすると直接追従するだけで大きな労力となり得る。
これをどうにかするために、まずは好きな挙動を差し込めるようにしようとしたのが org.bukkit.craftbukkit.* (以下craftbukkit)で、これはM…]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[雑記 最前が良い/bukkitのnmsあたりについての理解]]></title>
        <id>hatenablog://entry/13574176438075034671</id>
        <link href="https://naari.hatenablog.com/entry/2022/03/21/043859"/>
        <updated>2022-03-20T19:38:59.000Z</updated>
        <summary type="html"><![CDATA[FFFに出向いていた。かなり楽しかったのだけれど、イベント自体の詳しいことはあまり書きたくない(というか書く技量がない)ので書かない。ちょっとだけ書いておくとお目当ての方々が殆ど2階に集まっていたので2階が中心で、他に聞きたいものがある時だけ他のエリアに向かっていた、という感じだった。楽しかった。
今回のような勢いが強めなイベントについて、個人的に「唯一他人の目を(そこまで)気にすることなく暴れることができるもの」性を感じている。流れる曲調や周りの雰囲気がそうさせているのだと思う。今回もそれに漏れることはないようだったため自分も大暴れしていた。普段は取れるだけ最前を取るように動いているのだけれど、今回は体力のことも考えて一度だけ最前を取るようにした。そういった行動を経て思ったのは、やはり最前は暴れるのに一番適しているということだった。理由はこんな感じ↓
演者が目の前にいる
自分の直前にスペースがある
手すり(あのパイプって手すりって解釈で良い？ただの区画分けだったりする？)がある場合、掴むことができる
１つ目について。自分の家に最高のリスニング環境があっても、イベントの一体感に勝ることはないと思っていて、そんな一体感の向かう先の先頭、演者の目の前に立っているというのはとても気持ちがよいものだと思っている。２つ目について。目の前にスペースがあるということは、腰を使って上半身を大きく動かしたり、腕を大きく振ったりしても迷惑がかからないので素晴らしい。３つ目。手すりを掴んだことのある人ならわかると思うけど、その状態からであれば腕の力によって体を動かすことができるようになり、ヘッドバンギングの際に腕の力を借りることができるようになる。これは体力の少ない我々にとっては是非とも活用したい設備だと思っている。
こんな感じで、今回は体力に気をつけつつ暴れたつもりだったが、まだイベントの中頃にも達していない頃に体力が限界を迎えてしまい、しばらく座り込んだりしていた*1。こういったイベントを全力で楽しむには普段からの体力づくりが大事であると再認識した。でも体力づくりってどうやればよいのだろう。有識者はおしえてください。

クラブイベントは基礎体力が大事　スポーツすぎ
— なあり (@_naari_) 2022年3月19日
  
最近Minecraftのサーバーの実装であるspigotのプラグイン機構に関心を寄せていて、昨日bukkitやnmsあたりについて諸々の理解をした。文章でまとめるのはそれはそれでやりたいんだけど、まずは口で説明してみた。↓
youtu.be
*1:階段や床などには座ってはいけないらしく、2回注意されてしまった。椅子に座ろう。]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ざっき]]></title>
        <id>hatenablog://entry/13574176438074361902</id>
        <link href="https://naari.hatenablog.com/entry/2022/03/19/030101"/>
        <updated>2022-03-18T18:01:01.000Z</updated>
        <summary type="html"><![CDATA[最近色々な行動を制限していた。例えばゲームとかコーディングとかTwitterとかDiscordでの通話とかがその対象で、それによって時間を捻出して、参加したコンピの提出期限に向けての音源制作に当てたりしていた。とは言ってもフルで捻出できるわけではなく、その時間のうちの半分ほどは何もしたくない気持ちを落ち着ける時間として消費した。何かをやる時間というのはそういった何もない時間をバッファとして考慮しておく必要がある、というのは仕事から良く学んでいたので割と心置きなく何もしなかった。この期間というのは実は3月の初め頃からで、少し前に一週間の休みを頂いていたわけだが、実はこれも殆どDTMを触る時間に宛てるために取得していたものだった。
ただ、勿論なんだけど、これはどちらかというと気持ちの良い時間の過ごし方ではなかった。当たり前だが、無視することのできない距離にある締め切りを前に何もしていない時間を生んでしまうと、罪悪感と焦燥感が跳ね上がってしまうのだ。
今回についてはこれが特にひどかった。一週間の休みのあとに訪れた締め切りの日、なんとか完成まで持っていって提出したのだが、大事な部分を見落としていた。実は今回参加したコンピには大事なお題が存在していたが、なんと完全にこれを失念してしまっていたのだ*1。ありがたいことに、主催の方は締め切りの日程にバッファを設けてくださっていたため、これをどうにかするために5日間の猶予を捻出して頂けた。この5日間も同じく何もやれない時間が割とあったが、こちらもまたなんとかすることによってなんとかすることができた。3月前半だけで締め切りが2つもあったということになる。ずっと落ち着かない気持ちで過ごさなければならない3月前半だったというわけだ。
まあそんな感じで2mixは提出できたわけなので、後は成り行きに任せることができるだろう。気楽になったところで色々なことに手を出せるようになった。特筆すべきは、さっき壺をやっていたら記録を更新することができたというもの。3:28くらい。雪山で40秒も溶かしてしまう、という大ぽかをしてしまった。これ込みでsub 3:30なので、3分切りも夢じゃないなと思っている。今後もがんばるぞ～
youtu.be
他にも、nmsを使わないでNBTを取る機構を用意したプラグインとか、ひとのDiscord botリポジトリに勝手にDockerでの開発環境を作ったりとか、終わった途端にかなりの進捗を出すことができた。前者については多分おもろいので明後日記事を書くかな。
あと昨日はマリオカート8DXに追加されたコースのプレイが解禁された日だった。事情として、マリオカート8DXは久しくなんの新情報もない状態だったのだが、一つ前のNintendo Directにて急に「2023年末まで定期的に追加ステージが来るよ～＾」みたいな情報が発表されたのだった。僕は急に来たアプデは完全に予想外という認識でたいへん驚いたし、観測範囲内のプレイヤーは皆喜び狂っているように見えた。音MAD作者のなぽりさんがニコ生でフレ限部屋を立てていたので自分も参加した。この部屋が上限いっぱいの12人で埋まったというのが結構凄いことだったのではないかなと思う。今回追加されたステージのうちGBAスカイガーデンはDSアレンジでかなりお世話になったコースで、これに今回また出会うことができたのは結構感慨深かった。今回追加された各ステージはそれぞれ難しめな部類な気はするが、少しの間TAを粘ってみようかなとも思っている。本当にやるかはわからん。大変なのでやらんかも。
*1:これは決して依頼に問題があったというわけではなく、完全に自分が悪い一件だった]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[22/3/12 2022年1～2月消費コンテンツ]]></title>
        <id>hatenablog://entry/13574176438065472060</id>
        <link href="https://saize-lw.hatenablog.com/entry/2022/03/13/115138"/>
        <updated>2022-03-13T02:51:38.000Z</updated>
        <summary type="html"><![CDATA[2022年1～2月消費コンテンツ
先月と先々月の消費コンテンツです。
少なくとも今年いっぱいくらいはアニメより何かの書籍とか理系学問を優先していそう。結局今期唯一見てたファ美肉も4話くらいで力尽きてしまったしアニメ卒業か？
2022年1～2月消費コンテンツ
メディア別リスト
アニメ(12話)
漫画(26冊)
書籍(8冊)
映画(2本)
良かった順リスト
人生に残るコンテンツ
消費して良かったコンテンツ
消費して損はなかったコンテンツ
たまに思い出すかもしれないくらいのコンテンツ
以降の人生でもう一度関わるかどうか怪しいコンテンツ
ピックアップ
有限性の後で
亡霊のジレンマ
なぜ世界は存在しないのか
スパイダーマン：ファー・フロム・ホーム
天然知能
ザ・ファブル
半径1メートルの想像力 サブカル時代の子ども若者
二月の勝者(11～14巻)
Sonny Boy
生産コンテンツ
ゲーミング自殺、16連射ハルマゲドン
キャラ紹介⑦　白花ちゃん
メディア別リスト
アニメ(12話)
Sonny Boy(全12話)
漫画(26冊)
ザ・ファブル(全22巻)
二月の勝者(11～14巻)
書籍(8冊)
天然知能
黒板の思想
ヒミツのテックガール
たった1日で即戦力になるExcelの教科書
半径1メートルの想像力 サブカル時代の子ども若者
有限性の後で
亡霊のジレンマ
なぜ世界は存在しないのか
映画(2本)
ホームアローン
スパイダーマン：ファー・フロム・ホーム
 
良かった順リスト
人生に残るコンテンツ
有限性の後で
消費して良かったコンテンツ
スパイダーマン：ファー・フロム・ホーム
天然知能
亡霊のジレンマ
二月の勝者
消費して損はなかったコンテンツ
なぜ世界は存在しないのか
たまに思い出すかもしれないくらいのコンテンツ
ザ・ファブル
ヒミツのテックガール
半径1メートルの想像力 サブカル…]]></summary>
        <author>
            <name>LWのサイゼリヤ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[パーティはこちらまで]]></title>
        <id>https://not-miso-inside.netlify.com/blog/here-is-a-party/</id>
        <link href="https://not-miso-inside.netlify.com/blog/here-is-a-party/"/>
        <updated>2022-03-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[突然ですが告知です。VGプラスで来週に新作が出る。]]></summary>
        <author>
            <name>みそは入ってませんけど</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[等比数列に単項式が掛かっているものの和を計算するyosupo judgeの問題]]></title>
        <id>hatenablog://entry/13574176438070911813</id>
        <link href="https://kyopro-friends.hatenablog.com/entry/2022/03/08/205445"/>
        <updated>2022-03-08T11:54:45.000Z</updated>
        <summary type="html"><![CDATA[スナネコです。yosupo judgeにある  を解きました。
https://judge.yosupo.jp/problem/sum_of_exponential_times_polynomial
yosupo judge の github を見ると参考文献が載ってます。
https://github.com/yosupo06/library-checker-problems/issues/98
そういうわけで、この記事は Min_25 さんによる以下の記事を私の理解で書き直したものです。
https://web.archive.org/web/20170622095007/http://min-25.hatenablog.com/entry/2015/04/24/031413

話の流れはこうです。
 を漸化式で表す
多項式を求める
多項式で割ったあまりを explicit な式で表す
ステップ1. 漸化式を出す
本題に入る前に、単項式  の値を  に関する漸化式で求めるにはどうすればよいか考えてみましょう。
 についての  を持てばできますね。具体的には、 が  と二項係数を使って書けることから言えます。例えば

となります。二項係数を並べたこの下三角行列のことを下三角パスカル行列というそうです。 の下三角パスカル行列をwikipediaでは  と表しているので、ここでもそう書くことにします。
本題に戻ります。ここまでわかれば元の問題を漸化式で書くのは簡単です。

こうですね。左上の  の小行列を  とまとめて書くことにして


 の最後の成分であり、、 です。
 項を求めるのと同じようにできそうな気がしてきましたね。
ステップ2. 係数行列の固有多項式を求める
なぜ固有多項式を求めたいのか一応説明しておきましょうか。一般に、行列  の固有多項式  は  を満たします…]]></summary>
        <author>
            <name>kyopro_friends’ diary</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[雑記　連休終了　スシロー　ゲーセン]]></title>
        <id>hatenablog://entry/13574176438070200752</id>
        <link href="https://naari.hatenablog.com/entry/2022/03/06/225414"/>
        <updated>2022-03-06T13:54:14.000Z</updated>
        <summary type="html"><![CDATA[身内で回転寿司を食べたい、という話が出た。ので、連休最終日の今日、昼食として3人でスシローに行くことになった。
まず行くまでがちょっと大変だった。連休の影響で完全に昼夜逆転していて寝付けたのが昼前の10時とかだったので、まず起きれるのか？という心配があった。幸い、集合時間に間に合うように起きることはできたので一安心。昼に起きることで昼夜逆転を治すきっかけにもなって一石二鳥。さて外に出ようというタイミングで謎の勧誘の電話に出てしまい、断るタイミングを探すのにちょっと戸惑って時間ギリギリになってしまった。とにかく、そんな感じで集合場所の新宿に集合した。
スシローの新宿三丁目店についた。店内が思ったよりも広く、ちょっと入り組んでいてスロープもあったのでどこかの子供がキャッキャと騒いでいた。気持ちはよくわかる。何なら僕もそうしたかったので。店内の専用機を使って順番待ちをする。QRコードが印刷された紙を受け取り、待ち時間を確認すると約35分という表示があった。時間帯も相まっていたし「まあそんなものだよな～」と思っていたけど、なんと受付後10分程で自分らの番が来た。自分の前に予約していた方々のうち大半は受付後に外に出ており、そして来ることがなかった様子だった。その人達が諦めた結果として機械の想定よりもかなり早く入ることができたっぽい。これでもし自分らも想定時間分だけ「外で待つ」をしていたらすっ飛ばされていたんだろうな、運が良かった。
スシローではサーモン、マグロ、カツオを主に、昔は食わず嫌いなどで食べられなかった白身魚とかも食べた。とても美味しかった。久々に魚類を食べたんだけど、いつもと違う方向性の味という時点でかなり美味しいものと感じられますよね。一人暮らしで用意できる食事の材としては魚類は少し難易度が高い。これくらいのお金*1を払うことで魚にありつけるのは嬉しかった。最後にクレーム…]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[雑記　連休終わってまう]]></title>
        <id>hatenablog://entry/13574176438069525604</id>
        <link href="https://naari.hatenablog.com/entry/2022/03/05/015549"/>
        <updated>2022-03-04T16:55:49.000Z</updated>
        <summary type="html"><![CDATA[トラックメイクは割と順調に進んでいて、なんとかなりそうだな、という雰囲気。いまはイントロとアウトロがただドラムを置いただけになってるけど、なんかを思いついて詰めたい。後は普通にまだ声ネタが詰め込めていないので、もうちょっと頑張る必要がある。
完全に昼夜逆転した。ここ2ヶ月のあいだ、あまりそういうことがなかったので不思議に思っていたんだけれど、よくよく生活を振り返ってみるとDTMに精進している時は本当に昼夜逆転しやすくなっているような気がしている。プログラミングの時とかもそういう傾向があるんだけれど、大きな音を聞きがちなDTMはより目を覚ます方向にあるのだろう。
そのせいなのか知らないけど、昨日に至っては目が勝手に閉じるくらいの/スマホを持つ手がガクンとなるくらいの眠気が来ていたのに何故か寝に入ることはできず、そして「スマホを見なきゃ！」という依存症的な焦燥感に駆られて続けていた。ツイキャスをやってみていたら50分くらいやったタイミングで一瞬寝落ちして、ようやく寝れるのかという思いと共に枠を終了して就寝した。朝の10時くらい。
lee(asano+ryuhei)さんの新しいアルバムがリリースされた。2,3年ほど前にSoundCloudでmixを発見してから、唯一無二と言えそうなサンプリングセンス（特にラップという手法に拘らない日本語の使い方、染み入るようなメロディ/コードの引用や、本当に独特なリズム隊）やかなりザラついた音作り　が自分の心に強く響き続けていて、そんな方の新しいアルバムというわけです。また今回もその方向性は光り続けていて、本当に良い時間だった。
open.spotify.com
今回は特にPersian EmpireとBallheadがコラボレーターとして存在しているのも嬉しかった。理由はどっちもまた大好きなので。

FK_LV、AJKN、FKFKFKFKFが特にお気に入りかも。他も全部とても好き。
これは別にこの方に限った話じゃないけど、ビート系の方々は一曲の中で曲の方針を2つほど持ち、かつ急に別の方針に変更する技を見せてくることがあって、あれが本当にかっこいい。別の曲として分けるわけでもなく一曲の中でそれをやるのがかっこいい。このアルバムの中でも数曲そういったものがあってかなりうれしかった。
さっき寝落ちの話を書いたけど、起床してから*1lee(asano+ryuhei)さんの個展 YENO に行った。本当はオープニングイベントでの本人のアクトも見たかったけど、自分がポカしたので仕方がない。

大変素晴らしかった pic.twitter.com/ED1qvV3wEq
— なあり (@_naari_) 2022年3月4日
  
lee(asano+ryuhei)が個展『YENO』をANAGRAで開催｜オープニングイベントにKILLER-BONGやNAGAN SERVERなどが登場 - FNMNL (フェノメナル)
YENO
YESでもNOでもない。
あれでもこれでもない。
白でも黒でもない。
あいまいではっきりしない。
それは終わりであり始まりである。
lee (asano＋ryuhei)


あまりビジュアル方面への語彙がなく、長々しく話すとよろしくなさそうなので一番思ったことを書くと、この方のアートは音楽にしてもこれにしてもサンプリングの扱いが本当に上手いのだなという感じだった。完全に彼自身の表現手法に昇華しきれた、という感じなのだと思う。うまいこと書けないな、まだ明日(2022/03/05 21:00 JST)まではやっているので東京近辺で行ける人は足を運んでみてください。凄かったです。
ゲーム実況です
youtu.be
つまりは、
Ableton Live の Vocoder の Formant が高めな音を含んでいるサブベースと相性が良さげ
おそらく基音に対する倍音や、それよりも低い音のバランスをツマミ一つで移動させられることができる
喋ることも定まっていないのに、はたして一発で喋れるのか？をやってみたかった


ダメダメでした
けどちょっと面白かったのでもうちょっとやってみたい
*1:17時だった]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[22/3/4 お題箱回95：教科書利用、図書館利用、精神科利用等]]></title>
        <id>hatenablog://entry/13574176438062356152</id>
        <link href="https://saize-lw.hatenablog.com/entry/2022/03/04/213759"/>
        <updated>2022-03-04T12:37:59.000Z</updated>
        <summary type="html"><![CDATA[お題箱回95
389.初心者によるプログラミング学習についての文章では、既に何かしらのプログラミング言語への知識や経験を持っている学習者が他の言語を学ぶにあたって「初心者」を自称するケースが多いと感じるのですが、ガチでプログラミングや理数系学問に関する知識が身に付いていない状態からの学習についての文章(Webページ、書籍など)でおすすめはありますでしょうか？また、LWさんは初めてプログラミングを学ぶ際にどのような方法を選択したのか知りたいです。
ガチでまだ何も知識が身に付いていない人へのオススメは「教科書」一択です。
今はプログラミングを含む情報科目が小中高の教育に含まれているため、文科省お墨付きの教材がレベル別かつ安価で流通しています。大きめの本屋か教科書会社に行って手頃なレベルのものを探して購入して勉強してください。
教科書は学校への卸とか特殊なルートでないと入手できないと思っている方もたまにいますが、普通に個人で購入可能です。教科書は内容の割にはかなり安いので僕もたまに買います。
僕は日本の正規教育をかなり信頼しており、既に検定済教科書が存在している知識についての勉強法を聞かれた場合はほぼ例外なく「教科書を購入してください」とアドバイスしています。国内トップクラスの識者たちが頭を寄せ合って必要最低限の知識をわかりやすい形で結集したものが教科書であり、その信頼度はその辺の本とか民間スクールとは比べ物になりません。
教科書を勧めると「そんな子供向けの教育じゃなくてもっと大人向けのやつ、あわよくば裏技的なやつを教えてよ」と難色を示されることもよくありますが、子供向けの教材もクリアできない人に通れる裏道などありません。もちろん目的に応じてケースバイケースではありますが、全ての基本である正規教育で賄えそうな状況ならそれで戦うのが王道です。
僕個人について言えば、僕が高等教育を受…]]></summary>
        <author>
            <name>LWのサイゼリヤ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[雑記　9連休の真ん中です]]></title>
        <id>hatenablog://entry/13574176438068365984</id>
        <link href="https://naari.hatenablog.com/entry/2022/03/02/214932"/>
        <updated>2022-03-02T12:49:32.000Z</updated>
        <summary type="html"><![CDATA[弊社は夏休みという概念がなく、代わりに各メンバーが勝手に休みを取るという形式でやっている。概念としてリフレッシュ休暇というものがあり、一年に一度、有給によって休みが5日ほど連続する場合にプラス1日有給を連続させることができる制度が存在する。自分は夏に夏休みを取ることなく過ごしていたが、前述のリフレッシュ休暇は年度が変わることによって消えてしまうので、その前に休みを取っておこうと思った。それで9連休を錬成したのだが、今日はその真ん中の日にあたる。
この時期に取ったのには理由があって、単に最近疲れていたから、というのと、某コンピレーションに誘われていたがその音源に対して全く着手していなかったから、というのがあった。今必死こいて作っています、頑張って完成させる予定です。これがうまくいったらブログで宣伝でもしてみようかな。
景気づけとして連休初日にリポビタンDを2本飲んでみたんだけど、明らかに体調不良になった。が、トラックメイクの調子はとても良くなった。一時期眠剤の乱用をしてしまっていた時も同じくトラックメイクの調子は良かったので、おそらくそういうものなのだろう。反動が辛かったので本当に「いざ」といわなければならない時の切り札にしたい。
息抜きの壺で4分切を達成した。毎度ながら、反省点はかなり多く見えるのでこれをどうにかしてさらなるタイム短縮を狙いたい。つぎは3分半。
youtu.be
某日本料理系音MAD作者が「DTMのチュートリアル動画を見て学んだことをメモとして残している」と言っていて、えらいなあと思ったので自分も見習ってみる。ただ、今はとくに何も見ていないので、今取り掛かっているプロジェクトファイルを構成するにおいて思い出したことを書いてみる。
Erosion
短いピンポンディレイで付けられる質感はいい
別プロジェクトで作った変な音のチャンクは保存しておくと良い


以下のM4Lが超絶便利である
Sample Renamer
Sample Exporter
100hz～300hzあたり？が泥になりがちなのでノッチフィルターで殺すと綺麗に聞こえがち


同じような理由でSaturnのマスター刺しの時に100~300あたりが過剰に潰されてるとサブベースの聞こえ方が大きく変わる場合がある


最近っぽいベース系によく効く　みんなそうしてるっぽい
特にfoleyやhatなんかを埋めるとき、それが特定の間隔(例えば8分間隔)で置かれているものであれば開始地点はどれだけズラしても破綻しないすぎ


drunkは思い切っても良い
foleyは音程を変えたり伸ばしたりすると楽できる
真ん中から多少LかRにずれるくらいなら芯は食ったままステレオ感出るので嬉しい
ボルタメントすき～
tips集みたいだ。見直しても自分以外なにも分からなさそうだからいつかちゃんとまとめてみたい。
今やってる音源、1分までは作れたけどそれ以降の展開をどうしようか迷っている。新しいパートに取り掛かるのが億劫すぎる。誰か背中を押してくれ～～～*1　あと、やはり2mixができない。全部潰れた音になってしまう。どうにかしてくれ～～
以下は箇条書き
いつもスマホからUber Eatsを頼んでいたが、パソコンから頼むようになった


ブラウザからいけることを知らなかった
神


食事
財布の中のお金がなくて、外の自販機で飲み物を買えない


キャッシュカードから金が出てくるようになるか自販機がカード支払い可能になってくれる必要がある
前回記事に書いたメタップスペイメントの件がニュースになってた


これのせいでデビットカードを再発行したが、その番号下4桁が 1919 だった
ネットワークわからんな


Discordで離していて輻輳制御の話がでてきた
*1:この時、薬からくる体調不良は僕の背中を押してくれるのかもしれんなと思ってしまった。やめよう。]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[踏み絵]]></title>
        <id>https://not-miso-inside.netlify.com/blog/fumie/</id>
        <link href="https://not-miso-inside.netlify.com/blog/fumie/"/>
        <updated>2022-02-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本当は書かないといけないこと、やらなければならないことがたくさんある。みんなやることがある。しかし、自分の考えを整理するために書く。
なぜこれをインターネットに公開するのか？――わからない。ただ、他人の目に触れると考えると、私は少しだけ自制心を取り戻せる。これを書いている間、それがもつことを期待している。]]></summary>
        <author>
            <name>みそは入ってませんけど</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[撤収]]></title>
        <id>https://not-miso-inside.netlify.com/blog/withdraw-your-troops/</id>
        <link href="https://not-miso-inside.netlify.com/blog/withdraw-your-troops/"/>
        <updated>2022-02-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[ロシアはウクライナから軍隊を即座に引き上げるべきだ。]]></summary>
        <author>
            <name>みそは入ってませんけど</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ゴミ / 曲 / 金 / 壺　大変]]></title>
        <id>hatenablog://entry/13574176438065961051</id>
        <link href="https://naari.hatenablog.com/entry/2022/02/23/213426"/>
        <updated>2022-02-23T12:34:26.000Z</updated>
        <summary type="html"><![CDATA[繋がりのない話を4つ書く。
最近、ようやく部屋に溜まっていたゴミを片付けた。生活式用として自炊ができる状態になく、デリバリーかNoshの弁当ばかり食べている上にその空き箱を捨てずにサイドテーブルなどの作業スペースに置きっぱなしにしてしまっていて、それで手の届く範囲や、それが埋まってしまったので床などがゴミだらけになっていた。それらに対してようやく手を付け、45Lのゴミ袋3つ分にまとめ上げた。これによってサイドテーブルが復活したのがとても嬉しい。
自分はゴミを溜めてしまうこと以外にも、食後の皿洗い*1や、洗濯、掃除など、継続的にやらなければならなさそうな家事が全くといって良いほどできない。1, 2ヶ月に一度、「そろそろ実害が出始めたな」といったトリガーによって突発的に行うことはあるが、毎日ないし毎週動くことはできない。これは昔からそうで、この種類のタスクの優先度をかなり低めに見積もってしまう節がある。これによって起きる弊害について特に考えていない(考えることができない)のか、起こったとしても気にしていないのかわからないが、とにかく僕は怠惰らしい。
そんな怠惰さによって完成する自分の部屋の惨状を人に伝えると大抵引かれてしまうので、おそらく将来的にはどうにかしたほうが良いのだろう。傍からの評価は自分が思っているより大事っぽくて、人との付き合いに支障をきたす場合もあるらしい。僕は色んな人とうまく付き合っていきたいよ。一体どうすれば良いのだろう。今の考え方だとあまりモチベーションに繋げられないので、なにか自分にとって画期的な考え方を持って納得するしかない。もしかして本当に動くのが嫌で(怠惰すぎて)掃除などに繋がる考え方を捨て去っているのではないか？どうするべきなんだろう。完全なる未解決です。
とある件によって曲を拵えないといけないのだけれど、現状進みが悪い。3月上旬には完成している必…]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[【俺ガイル 考察】「待たなくていい」の射程——由比ヶ浜結衣は「負け」ていない？——]]></title>
        <id>hatenablog://entry/13574176438064774109</id>
        <link href="https://www.zaikakotoo.com/entry/2022/02/20/190002"/>
        <updated>2022-02-20T10:00:02.000Z</updated>
        <summary type="html"><![CDATA[はじめに. 由比ヶ浜結衣は「負け」たのか？

『やはり俺の青春ラブコメはまちがっている。』（以下『俺ガイル』）は、一見するといわゆる「雪乃エンド」で終わったように思われ*1、実際そう解釈することもできる。
たしかに、14巻（以下巻数は原作の表記に従って「⑭」などの丸番号で示す）で八幡は、雪乃と人生を分け合おうというような対話をし*2、それ以前の場面では、結衣が八幡から「待たなくていい」という言葉を告げられ*3、それにより結衣は涙を流し、なにやら「フラれた」風になる*4。こうして図式的に見ると、八幡という主人公が雪乃と結衣という2人のヒロインのうち雪乃の方をとった、いわゆる「雪乃エンド」のように見える。それはあたかも「普通の」ラブコメのようである。
だがいかんせん、この「青春ラブコメ」は「まちがっている」。本稿では、『俺ガイル』がいわゆる「雪乃エンド」とは言い切れないのではないか、ひいては由比ヶ浜結衣はある側面では「負け」ていないのではないか、ということ、さらにはそこからひらけてくる『俺ガイル』読解の可能性について、「待たなくていい」という結衣が八幡に告げるセリフから考えてみたい。
 

    
はじめに. 由比ヶ浜結衣は「負け」たのか？
1.0. 「待たなくていい」の状況整理
1.1. 「この模造品に、壊れるほどの傷をつけ、たった一つの本物に」
1.2. 「待たなくていい」を言うまで
1.3. 「待たなくていい」直前後
2.0. 「待たなくていい」の文脈
2.1. ⑭以前の「待つ」
2.2. ⑭での「待つ」
3.0. 「待たなくていい」の射程
3.1. 「壊れるほどの傷をつけ」る言葉
3.2. 結衣の希う「傷」と「痛み」
3.3. 「たった一つの本物へ」
3.4. フる／フラれる、「恋仲」からの脱出
3.5. 二項ではなく三項という可能性
4.0. 『俺ガイル』における決…]]></summary>
        <author>
            <name>野の百合、空の鳥</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[マンガクロスの作品のRSSフィードを作成できるようになった]]></title>
        <id>hatenablog://entry/13574176438065434984</id>
        <link href="https://naari.hatenablog.com/entry/2022/02/20/181337"/>
        <updated>2022-02-20T09:13:37.000Z</updated>
        <summary type="html"><![CDATA[昨日、こんな記事を書いた→ 「僕の心のヤバいやつ」用のRSSフィードを作成した - 名有りさんの日記 が、実はマンガクロスでも連載中*1の潮が舞い子が舞いも見たいことがわかった。ので、やはり実装を適切に抽象化し、複数作品に対して対応できるようにした。
mangacross-rss
https://naari3.github.io/mangacross-rss/yabai/feed.xml
https://naari3.github.io/mangacross-rss/shiomai/feed.xml
おそらく事実上は全ての漫画クロス作品に対応できたので、このリポジトリで全部をクロールできるようにする選択肢もあったが、しないようにした。もし他のマンガクロス作品が見たかったらご自分でフォークしてもらうと良さそう。src/main.rs の TARGETS を好きに変えることで達成できると思う。それか僕に推薦してハマらせる、など
*1:本流は別冊少年チャンピオンで連載中]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[「僕の心のヤバいやつ」用のRSSフィードを作成した]]></title>
        <id>hatenablog://entry/13574176438065232165</id>
        <link href="https://naari.hatenablog.com/entry/2022/02/20/023656"/>
        <updated>2022-02-19T17:36:56.000Z</updated>
        <summary type="html"><![CDATA[https://naari3.github.io/bokuyaba-rss/feed.xml
GitHub - naari3/bokuyaba-rss
osmosfeedを使って自分のためのアンテナ(RSSリーダー)を作成する - 名有りさんの日記 でいろいろなRSSフィードを漁るようになったんだけれど、webで読めるタイプのマンガにRSSフィードはあまり無かったりするっぽいかった。ので、それこそosmosfeedよろしくでGitHub Actionsを使用して定期的に僕ヤバを見に行き、記事一覧をRSSフィードにするやつを作った。↑のリンクからどうぞ。
マンガクロスはSPAっぽくなっていて、アクセスした時にマンガの情報APIを叩く。これに各話、巻についての情報が付いてくるので、これをRSSのフィードにした。アクセスしてjsonをRustっぽく扱うのはふつうにserde, serde_jsonで、RSSフィードを作るためには GitHub - rust-syndication/rss: Library for serializing the RSS web content syndication format を使用した。ここまでやると、実はマンガクロスの任意の連載のRSSフィードを作り放題な気がするんだけれど、今の所マンガクロスの他の作品は読んでいないのでそのような共通化はなにもしていない。マンガが置いてある階層をリポジトリにそっくりそのままで置いて( naari3.github.io/mangacross-rss/yabai/feed.xml みたいな )、全ての作品についてそうすることを考えたけど、なんというかじぶんの中のラインを超えてしまうし、何より範囲が広くなって面倒を見きれなくなる。何事もスコープは狭いに限るのだ。
あとはふつうに .github/workflows を設置した。r7kamuraさんの r7k をそのまま持ってきたようなものにした。動きとしては、
まず tag.yml でmainブランチを監視、Cargo.toml の version が新しくなっていたら新しいタグを作る。
次に、release.yml で新しいタグの作成を検知して新しいリリースを切る。
最後に、build-rs.yml で新しいリリースの作成を検知して各OS向けのバイナリを作る。
追加で1時間に1回バイナリをダウンロードして実行、gh-pagesに公開するやつを仕込んだ。
のだけれど、GitHub Actionsのタグ/リリース生成に対して、GitHub Actionsが発火してくれなかった。僕のアカウントからのタグ/リリース作成には反応するのに。これが今解決できないのでタグが作成された後にのリリース作成は手動でやっている。これを解決したい。ので、もし知っていたらなにか教えて下しあ。
(追記)どうやらGitHub Actionsに自動的に付与されるGITHUB_TOKENには特別な制約があるとのことだった。発火したActionからさらに別のActionが発火できないようになっているらしい。
Automatic token authentication - GitHub Docs
When you use the repository's GITHUB_TOKEN to perform tasks, events triggered by the GITHUB_TOKEN will not create a new workflow run. This prevents you from accidentally creating recursive workflow runs. For example, if a workflow run pushes code using the repository's GITHUB_TOKEN, a new workflow will not run even when the repository contains a workflow configured to run when push events occur.


まあそれはそうかも、よく見るとr7kamuraさんのymlも PERSONAL_ACCESS_TOKEN を指定していたので、そうするようにしたら動くようになった。めでたし。]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[22/2/19 約2021年売却コンテンツまとめ その2]]></title>
        <id>hatenablog://entry/13574176438060633706</id>
        <link href="https://saize-lw.hatenablog.com/entry/2022/02/19/201341"/>
        <updated>2022-02-19T11:13:41.000Z</updated>
        <summary type="html"><![CDATA[駿河屋への売却続き

前回の続き、部屋から駿河屋に売却したコンテンツの思い出棚卸しです。
saize-lw.hatenablog.com
駿河屋への売却続き
詭弁学派、四谷先輩の怪談1～3
やがて君になる1～3
シャドウバース電撃コミックアンソロジー
貞操逆転世界1
もっとも美しい数学ゲーム理論
C言語ポインタ完全制覇
テラフォーマーズ
漢文力
ミレニアル起業家の新モノづくり論
スタジオパルプ1
ルフランの地下迷宮と魔女の旅団
詭弁学派、四谷先輩の怪談1～3


詭弁学派、四ッ谷先輩の怪談。 1 (ジャンプコミックスDIGITAL)
作者:古舘春一
集英社
Amazon
ハイキュー作者の前作。
ハイキューの連載が始まったときには「あの邪道漫画・四ツ谷先輩の作者が王道スポーツ漫画を描けるのか？」と要らぬ心配をしたものだが、作者的にはむしろバレーボール漫画の方が本命で四ツ谷先輩は練習枠みたいな感じだったらしい（wikipedia情報→■）。長続きしないことを薄々感じつつ単行本を買う程度には好きだったが、それでもやはりその地味さ故かすぐ終わってしまった。「ジャンプ向きではないが他の雑誌なら……」みたいなことを当時の打ち切りレーススレに書き込んでいた記憶がある。
怪談をテーマとしているが、決して「怪異もの」ではないのがジャンプ漫画らしからぬポイントになっている。つまり怪談に出てくるような恐ろしい怪異と実際に戦うのではなく、取沙汰されるのはあくまでも怪談によって生まれてくる恐怖や物語化の力能の方だ。モンスター的なものはイメージとして仄めかされるだけで実在はしない。
今にして思えばこの漫画は推理ジャンルの類縁でもあり、「謎への決着の付け方がロジカルな語りである推理漫画と、それがナラティブな語りである怪談漫画の同異点とは」みたいな方向で語ることもできそうだ（が、もう売ってしまった上に売る…]]></summary>
        <author>
            <name>LWのサイゼリヤ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[壺5分切り達成、仕事、などがありました]]></title>
        <id>hatenablog://entry/13574176438064606573</id>
        <link href="https://naari.hatenablog.com/entry/2022/02/18/071407"/>
        <updated>2022-02-17T22:14:07.000Z</updated>
        <summary type="html"><![CDATA[壺をやり続けてきたけど、ついに5分を切ることができた。2018年くらいからやっていた記憶があるので、おおよそ4年来でこの目標を達成できたことになる。

きたああああああああああああああああああああああああああああああああああああああああ pic.twitter.com/N6lLzExEzA
— なあり (@_naari_) 2022年2月17日
  
ただ、途中でやっていない期間も多かったので、実際にやった期間としてはもっと短くなる。3年ぶりくらいに継続して挑戦した結果、5分を切れたという感じ。いや、いずれにせよかなり嬉しい。
その後もう少しやったらすぐ3秒縮めることができた。こちらは偶然にも動画に撮ってあって、これをYouTubeにあげてみた*1。
youtu.be
悪いところを挙げるとこんな感じ。
各所もたついている
ピンクのシルクハットがだめ
バケツがだめ
スロープのショートカットをしていない
つまり、まだ安定している状態ではない。まだ様々な見込みがあるので、もう少しだけ挑戦してみようと思う。なんなら4分切ることも可能なように思えてきた。
技術記事を書いた↓。といってもコードはひとつも出てこないが。
「秘伝化したJenkinsと共に動いているレガシーなDockerをバージョンアップする」をやった - 名有りさんの日記
最近、仕事がつらくなってきている。数年間運用されたチームだから様々な種類の負債があるのは仕方がないことだけれど、これらが最近になって一気に露見してきた。チームで地道につぶしているが、ちょっとつらい。インシデントに対する対応を行って、その根本対応となるようなチケットを切り分けて担当してもらう、というのもやっているが、最近はこれも辛い。僕個人の技能としてタスク管理がうまいことできないからだろうか？よくわからん。わからんことばっかりやっていて、わかるようになるのは楽しいが、「負債をほったらかした結果だぞ」と後ろ指を指されている気分になって辛くなっているのかもしれん。
やることがあるんだけれど、それが手に付かない僕に対してイオンさんが教えてくれたやつ↓

イオンさんに「やらなきゃいけないことに手が付かない時はどうすれば良いか」って聞いたら「やらなきゃいけないことの同種だけど別にやる必要のない、ただ自分の気力が向くことをやるといいんじゃないか」って教えてくれた
— なあり (@_naari_) 2022年2月16日
  
*1:ニコニコ動画もそうだけど、YouTubeも長い尺の動画の扱いには時間がかかるのだなと思った。AV1とやらなのだろう。]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[「秘伝化したJenkinsと共に動いているレガシーなDockerをバージョンアップする」をやった]]></title>
        <id>hatenablog://entry/13574176438064605106</id>
        <link href="https://naari.hatenablog.com/entry/2022/02/18/070442"/>
        <updated>2022-02-17T22:04:42.000Z</updated>
        <summary type="html"><![CDATA[仕事でレガシーなEC2インスタンス上にあるレガシーなJenkinsと共に動いているDockerエンジンをアップデートする対応を行った。その際の備忘録を書いておく。
tl;dr
状況としては以下の通り
Jenkinsでのデプロイに使用しているDockerのバージョンが古すぎる


17.04
JenkinsとDockerはEC2インスタンス上で一緒に動いている
Jenkinsが動いているEC2インスタンスを複製してJenkins Agentとして起動した
master側のDockerをアップデートし、古いDockerと新しいDockerそれぞれを好きに使い分けられる状態にした
くわしく
Jenkinsの上で動いているDockerのバージョンが古すぎるため、新し目のalpineを使用したイメージを扱えない問題が発生していた。詳細は以下を参照してほしいが、ようは musl が扱う新しい命令を runc が対応しきれていない、という問題だった。
It's time to update Docker Engine | GitLab
Release Notes for Alpine 3.14.0 - Alpine Linux
インターフェイスが大きく変わるわけでもないし、エイヤでDockerをアップデートしてしまっても良い気がしたが、このJenkinsが場当たり的に管理されてきた経緯もあり、自分自身が全てのJobについて「責任を持って管理できている」と言えるではなかった。そのため、もし問題が発生しても良いようにする方法を考える必要があった。以下のようなものが浮かび、以下のような懸念が浮かんだ。
AMIのバックアップを取ってからDockerをバージョンアップして、問題があったらバックアップからリストアする


別の対応でJobを新しく定義などしており、巻き戻すと新たなコストが発生しかねない
別インスタンスでDockerを起動して、 DOCKER_HOST をそちらに向け変えることでいつでも切り替えられるようにする


たしか別ホスト上のDockerにボリュームってマウントできないよね、既存のJobの要件によっては動かない
AMIのバックアップ経由でEC2インスタンスを複製し、Jenkins Agentを起動できる環境を用意した上でそちらだけDockerをバージョンアップする


これまでのJobがこれまで通りに動くことが期待できる
Job単位でmaster/Agentを切り替えることも可能
というわけで新たにJenkins Agentを建てることになった。といってもとても簡単で、masterのJenkinsからAgentの環境にSSHできるようにするだけで良い。一点、ログイン対象のユーザーのログインシェルが指定されていることが必要なので、 jenkins ユーザーを使いまわしたい場合はこれに気をつける必要がある。 $ chsh jenkins -s /bin/bash
その上で、Job実行時のパラメーターとして実行対象のAgentを切り替える対応も行いたい。Pipelineで作成されていればJenkinsfileに手を入れてもらうだけで良いが、そうでない場合についてはJobの設定でどうにかする必要がある。単一のAgentに縛ることは素のJenkinsで既に達成可能だが、切り替えられるようにする場合は以下のプラグインを使用する。
Node and Label parameter | Jenkins plugin
このパラメーターを各Jobに仕込むことで、新しいDockerではJobが失敗してしまった場合に古いDockerが存在するAgentに切り替えて実行する、という対応が可能になる。
あとは経過観察。すべてが新しいDockerでも問題なく動作して「ほら、エイヤで上げてもよかったじゃん」と笑いながら言えるようになることを期待している。
本当はこのあたりの杜撰とも言えるJenkinsの状態を見直したいが、それにしてはあまりにも巨大なので、CasCプラグインなどを使ったコード化が充分に行われているJenkinsの作成を進めている。job-dslやDocker下での管理はまずますうまくいきそうなので、個人的にも期待している。]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ゼロから見直す『輪るピングドラム』⑪「タワー」と「呪い」——時籠ゆりについて——【14～15話】]]></title>
        <id>hatenablog://entry/13574176438057628807</id>
        <link href="https://www.zaikakotoo.com/entry/penguindrum/re/zero/11"/>
        <updated>2022-02-17T08:24:31.000Z</updated>
        <summary type="html"><![CDATA[「嘘つき姫」
14-15話は、主に時籠ゆりの話になっている。
とりわけ15話は、ゆりの過去が明らかになるとともに、桃果のもつ「運命の乗り換え」の能力とその代償の説明となっているという点で重要である。
そのほかにも細かい伏線はあるのだが、今回は「時籠ゆり」（以下「ゆり」とする）に対象を絞って、簡単にではあるが、時籠その人について考えてみたい。
 

    
「嘘つき姫」
ゆりと桂樹の位置づけ
80年代生まれ
なぜ世代が重要か？
時籠ゆりについて
象徴としての「タワー」
『みにくいアヒルの子』
「愛」
家族という「呪い」
「呪い」と「代償」
ゆりと桂樹の位置づけ
80年代生まれ
まずはゆりと多蕗桂樹（以下「桂樹」）の位置づけを確認しておこう。
そもそもゆりと桂樹がセットになっていることにポイントがあるわけで、つまり、2人には世代という共通点がある。
ではゆりと桂樹はどの世代なのか。作中の描写に従えば、95年時点で桃果は10歳であり*1、その桃果とゆりが同級生であることを考えれば*2、桃果とゆりは85年生まれとなる。
加えて、桃果の母が桂樹と桃果は同級生であると言っていたことに鑑みれば*3、結局、桃果もゆりも桂樹も85年生まれとなる*4。
要するに言いたいのは、ゆりと桂樹が桃果と同世代、冠葉や晶馬、陽毬らより上の世代、80年代生まれの世代として位置付けられているということだ。
 
なぜ世代が重要か？
ではなぜわざわざゆりと多蕗の世代を確認したかといえば、それは彼らが95年の事件を上の世代として受容する様子が描かれているからだ。
少しややこしいのだが、ゆりと多蕗は物語のなかでは80年代生まれではあるが、2人に仮託されているのはいわゆる「80年代的な」悩みであるように思われる（つまり本当には80年代的な悩みや空気感を受容するのは80年代より前に生まれてすでに成熟している人であるわけ…]]></summary>
        <author>
            <name>野の百合、空の鳥</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ミルクボーイの漫才風CM全部みる]]></title>
        <id>hatenablog://entry/13574176438063420107</id>
        <link href="https://xcloche.hateblo.jp/entry/2022/02/14/211038"/>
        <updated>2022-02-14T12:10:38.000Z</updated>
        <summary type="html"><![CDATA[2019年にM-1グランプリで優勝して以来、ミルクボーイを起用した漫才風CMを本当によく見るようになった。
バツグンで、笑いも入れつつ適度に情報を提示しながら宣伝するのにちょうどいい構造のようである。 
ミルクボーイの漫才はもともと商品紹介にすぐれたフォーマットなのだが、さらに微調整してCMに適応しているようなのだ。
ということで、ミルクボーイのシステム漫才の仕組みを概観したのち、Web上で閲覧できるミルクボーイの漫才風CMと比較して、本ネタとの構造的な違いやCM化にあたって行われている工夫を見ていこう。
本ネタとCM
まずは比較のために、コーンフレークをテーマとしたこちらの二つの動画を見てみよう。
www.youtube.com
本ネタ「コーンフレーク」
www.youtube.com
CM「グラノラハーフ編 楽屋裏編」
どのくらい「違い」があるだろうか？
システム漫才の流れ
ミルクボーイの本ネタをフローチャート化すると、次のようになる。

ツカミ
漫才のツカミではまずは駒場が会場から何かを受け取るジェスチャーを行い、内海が「①あーありがとうございます、いま○○をいただきました　こんなんなんぼあってもいいですからね」と受ける。ここで受け取るのはもらっても困るもの、なんぼあってもいいわけないものなことが多い。
メイン導入
メイン構造の導入部は、駒場の「ウチのオカンが好きな（ジャンル名）があるらしい」から入り、そこからなんやかんやあって忘れてしまったその名前を内海が一緒に考える「ほな俺がね、オカンが一番好きな〇〇一緒に考えてあげるからどんな特徴いうてたか教えてみてよ」の流れになる。ネタによってはここで変化があり、「好きな（ジャンル名）がある」と聞いた時点で「わからへんのでしょう？」で受ける（ミルクボーイのいつものシステムを対象化した）パターンや、「オカンが好きな（ジャンル名）…]]></summary>
        <author>
            <name>セミになっちゃた</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[音MAD作者のブログを集めたアンテナを作成している]]></title>
        <id>hatenablog://entry/13574176438062947102</id>
        <link href="https://naari.hatenablog.com/entry/2022/02/13/143118"/>
        <updated>2022-02-13T05:31:18.000Z</updated>
        <summary type="html"><![CDATA[さっきこんな記事を書いた→ osmosfeedを使って自分のためのアンテナ(RSSリーダー)を作成する - 名有りさんの日記
技術的な、難しいことはさておき、ようはブログのアンテナを作成することができた、というもの。これの音MAD界隈版作ろうとしている。恐らく自分が観測できている範囲の音MAD作者のブログはほとんど集めきっていてるはずで、これを実際に運用し始めている。
この収集方法は @otomad_blomaga というTwitterアカウントのように選りすぐられたものではなく、機械的に動かしている。なので例外的に音MADについて触れたような記事を取り上げられないが、でもある程度の網羅性は担保できていると思う。
otomad-feed
現在のリストは以下の通りで、既に更新されていないものも含めて161件ものブログが開設されている。そのうちの116件は note.com のアカウントで、昨今のトレンドを感じられる。次点ははてなブログで、40件ほど。
https://github.com/naari3/otomad-feed/blob/main/osmosfeed.yaml
これらのリストから1時間に1回ほどデータを収集するようになっていて、新しい記事があればおそらく新着記事に追加される。うまく動いていないようだったらぜひとも教えてください。
また、このリストから漏れてしまったブログについても随時募集中で、僕に直接伝えるか、GitHubに知見があるのであればリポジトリにPRを投げてもらうか、このフォームからリクエストを投げることができる。ぜひとも協力していただきたいです。逆にリストから削除してほしい時は、それもまた僕に直接伝えてください。もうしわけない。
既にRSSリーダーを利用している方については、上に張ったリストを追加してもらうか、このアンテナ自体がRSSのフィードを提供しているので、それを読み込んでもらうと良いと思う。ただちょっと巨大かも。僕は↓このフィードを使った運用をしていないので、もし巨大すぎて不都合があるようだったらそれについて教えてほしいかも。
https://naari3.github.io/otomad-feed/feed.atom
なぜこれを作るのか
一番大きな理由は自分がよく見ているコンテンツを作っている人がどんな文章を書いているのか？というのを探るためだけど、もうちょっと書いてみる。
まず音MAD作者の方々が書くブログは面白い。恐らく音MADの制作の過程で生まれた所感の方向性*1とブログみたいなものとの相性が良いという事もあるだろうが、別に音MADに関連したものではなくとも面白く、そのセンスはさすが創作に根を詰めているだけあるなと思ったりもする。これを逃さず閲覧できるアンテナを作成したかった。
また、これは集合知としても役立つ気がしている。これは「音MADに関する技術的な記事を逃さないようになる」というだけではなく、ただ普通に関係のないことについて書かれた文章についても同じように捉えられると思っている。ブログは後世に伝える手段としてはかなり優れているように思う。現に数年前に更新したっきりでそれ以来全く更新のない音MAD系のブログも存在しており、ただその記事は今でも問題なく閲覧できたりする。日記ってすごいかもしれん - 名有りさんの日記の下の方に書いたことと似たような気持ちだが、みんなが文章を書き続けるとそれが界隈自体のアーカイブとして機能し始めると思う。そのための、草の根としてのアンテナでもありたい。
よろしくお願いします → otomad-feed
*1:ネタ/技術/思考]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[osmosfeedを使って自分のためのアンテナ(RSSリーダー)を作成する]]></title>
        <id>hatenablog://entry/13574176438062919224</id>
        <link href="https://naari.hatenablog.com/entry/2022/02/13/131522"/>
        <updated>2022-02-13T04:15:22.000Z</updated>
        <summary type="html"><![CDATA[github.com
yamlファイルにRSSフィードを書き溜めておく
新着記事一覧のhtmlを静的ファイルとして作成する
GitHub Pages配下に設置する
これを定期的に動くGitHub Actions上で実行する
そうすることでRSSフィードのためのアンテナを用意することができるようになる。というのがosmosfeedの特徴。上述した環境をかんたんに用意するためのテンプレートも存在しており、テンプレートを使用したリポジトリを作成した後、yamlを埋めるだけでosmosfeedを使えるようになる。既存のRSS追うやつと違って、これはGitHub上にyamlで管理するだけなので大変にお手軽で、移植性もかなり高い。なにより、GitHub Actionsと連携するのがとても賢いなと思い、自分もこれに従ってみることにした。
https://naari3.github.io/naari3-feed/
https://github.com/naari3/naari3-feed/
これまでははてなブログの購読リストのみを使用していたが、性質上はてなブログしか集めることができないために他種の媒体を追うのが困難になっていた。今回によってRSSフィードを配信している媒体であればなんでも追えるようになったのだと思う。
運用してすぐに「更新日時をかなり未来に置いておくことで、特定の記事を記事順の先頭に置くハック」の存在を思い出す。アンテナの先頭もそういった記事で埋まってしまう。これらの記事は意味合い的には新着記事ではなく、アンテナ運用の上ではただ邪魔なだけなので、「未来の記事はアンテナに含めない」のような対応が必要になった*1。ので、PRを投げた。投げてから反映されるまでの間は自分のネームスペース上にosmosfeedをpublishし、それを利用するように変更していた。昨日くらいにマージ、最新版がpublishされたようなのでそちらを利用するように変更した。
また、osmosfeedが吐き出すhtmlは事前に用意されたテンプレートを使用しているのだが、これを自分で用意することも可能。今回、記事のサムネイルを記事一覧右側に設置したかったので、そのように対応した。ただ、サムネを取得する方法があまり良いとは言えない方法だった*2ので、どうするのが妥当か？を聞いてみたところ (osmoscraft/osmosfeed discussion#75) 、現在取り組まれているv2にサムネイル取得のためのコードが存在し(または用意中で)、これをバックポートすることで対応できるのではないか？という話を頂いた。今後に期待すると良さそう。
ここで書いたそれぞれの対応は、osmosfeedの性質によって実現できる対応だと思った。体験がかなり良い。
もしこれを見ているあなたも試したくなったのであれば、以下のページを参考にするか、手っ取り早くは先程挙げたテンプレートからリポジトリを作成すればよい。
paiza.hatenablog.com
GitHub Pagesは性質上パブリックなものなので、生成結果のアンテナもパブリックなものとして公開される。これを利用することで、「特定の界隈をまとめたアンテナをその界隈に対して共有することもできる」と考えた。これは共有知としてかなり有用なのではないか。GitHubで管理されている性質上、誰でもフォークでき、もし追加すべきブログがあるのであればそれを対象に加えることもできるだろう*3。そういった記事をこれから別記事として書く。
*1:もうすこし賢い対応方法はあるだろうが、この対応で自分の要望は解決されるので問題なし
*2:そもそもRSSフィードとしてサムネを用意する方法がめちゃくちゃたくさんあって簡単に対応できない
*3:しかしこれはgitに対する知見が前提になってしまう]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ゆゆ式Blu-ray BOX(スペシャルプライス版)を買った]]></title>
        <id>hatenablog://entry/13574176438059035553</id>
        <link href="https://naari.hatenablog.com/entry/2022/02/12/073653"/>
        <updated>2022-02-11T22:36:53.000Z</updated>
        <summary type="html"><![CDATA[最近はアニメを「音MADの聖地巡礼」という気持ちで見ている。あ！ここ見たことある！！超音MADだ！！！がかなり多くて本当に楽しい。その流れでゆゆ式を見たが、とても面白かった。

ゆゆ式を見た　本当に面白かった
— なあり (@_naari_) 2022年1月26日
  
人間関係の捉え方がかなり良かった


3人が残りの2人に対してどう捉えているか？とか
特に幼馴染2人に対するゆずこの捉え方とか


随所に見られる疎外感の演出を入れてくれて本当にありがとう
3人の中の他の関係についても同じようなものがある
相川さん側の3人組からの距離感の詰め方(赦し方？？)とか
というか普通にこの3人のこの高校生としての雰囲気はかなり良かった
多分この人たちは相当賢い


連想や反応の仕方が良い
毒が良い
ギャグセンスがかなりすき
お互いがお互いを女性として良い、と捉えてる感じも良い


たいへんえっちだと思った
かなり面白かった。いいアニメ。
その一方で、このアニメはもはや古いらしい。「お前は本当に出遅れているな」と言われた。

「ゆゆ式めっちゃ刺さった」という話をDiscordのサーバーで広げたら通話相手が誰もゆゆ式の内容を覚えていなかったのでたいへん悲しい
— なあり (@_naari_) 2022年1月26日
  
そんな中で「にゃにゃ式」を見ろという声があった。「にゃにゃ式」はBDあたりの特典でしか見ることができない。ので、もうほとんど衝動でBOXを買ってしまった。9年ほど前のアニメであるにも関わらず、去年の3月に廉価版のBD BOXが発売されていたのでそれを買った。僕は出遅れていたのに、本当にありがたいことのように思う。
https://www.amazon.co.jp/dp/B08QDLP9DK

pic.twitter.com/uOhQGch4Wo
— なあり (@_naari_) 2022年2月9日
  
アニメでBDを買うのはまちカドまぞくに次いで2つ目だった。まちカドまぞくも「ウオーめっちゃきれいになるなー」とか思っていたが、ゆゆ式は直前に(アニメの画質が悪めであることでも有名らしき)アマプラビデオで見ていたのもあってかなり綺麗に思えた。
ちなみに「にゃにゃ式」は本編と違う趣があり、また良かった。攻めと受けがはっきりしてましたね。たぶんアマプラでは見れないっぽいのでぜひともBD BOXを買ってみてください。
蛇足 Blu-ray Discってどうやって再生するのが普通なんだ？？
PCでBlu-ray Discってどうやって再生するんですか？？
今回はVLCでどうにかして*1*2*3再生したんだけれど、本来は何のソフトを使うのが普通なんだ？？またはPCからは再生しないほうが良い？？？
*1:頑張って
*2:なんとかして
*3:多分良くない方法で]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[22/2/11 お題箱回94：親ガチャ、SunnyBoy、マーセナリーズなど]]></title>
        <id>hatenablog://entry/13574176438060712418</id>
        <link href="https://saize-lw.hatenablog.com/entry/2022/02/11/212205"/>
        <updated>2022-02-11T12:22:05.000Z</updated>
        <summary type="html"><![CDATA[お題箱回94

379.「親ガチャ」について偉そうに語ってる精神科医の話をいくつか聞いてしまったのでぜひLWさんに解説していただきたいです！
380.ありがとうございます！>お題箱>親ガチャ
僕が見たのは下記の二つです。他にもひろゆき氏や東大卒の方、武井壮氏、茂木健一郎氏…いろんな人が語ってて煩いです、叩っ斬ってください！
・『メンタルドクターsidow「親ガチャハズレ」←どう思う？』　https://youtu.be/CV3y8fR6hTk
・『精神科医が心の病気を解説するch「親ガチャ」について、精神科医目線で解説します』　https://youtu.be/IT2s0X7WVas
ざっと各界のコメントを調べて動画も軽く見ました。
解説したり叩き斬ったりすることを期待されている手前申し訳ないですが、そういう話にはあまりならないですね。僕は「親ガチャ」という言葉を高く評価していることを何度かツイートしていますから、たぶんそこから「親ガチャ」という言葉に否定的な風潮に異を唱えるような展開が望まれたのだと思いますが、そもそも世間で語られている論点と僕の論点は全く違います。「親ガチャ」という言葉の背景に想定する文脈が異なり、同じ言葉を使って完全に別の話をしているので、僕が彼らを否定することも彼らが僕を否定することもないはずです。
いま過去のツイートを見ると、去年9月頃には親ガチャという言葉がきっと社会を良い方向に導くだろうと期待していたのですが、
親ガチャという発想は俺は完全に正しいと思うしこれを期にマイルドな反出生主義のような形で生む側の倫理を考える風潮はある程度定着するだろうなと思う
2021年9月15日


10月頃には僕が使う言葉の意味と市井で使われている言葉の意味が全く異なることに気付き始め、
俺は親ガチャっていう言葉大好きだしようやく非存在者への想像力が市井で培われる…]]></summary>
        <author>
            <name>LWのサイゼリヤ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[日記]]></title>
        <id>hatenablog://entry/13574176438060827028</id>
        <link href="https://naari.hatenablog.com/entry/2022/02/07/023048"/>
        <updated>2022-02-06T17:30:48.000Z</updated>
        <summary type="html"><![CDATA[金曜日にふーふーさんと通話しながら酒を飲んだら睡眠と起床が終了した。土曜日 04:00 ～ 17:00 、日曜日 16:30 ～ 23:00 みたいな睡眠をして、今起きて月曜日に備えている。折角の休日が…という気持ちにならなくもないけど、まあ色々やったしよく寝たしなんやかんや充実していた。月曜日もなんとかなるだろう。
最近太鼓の達人のPC版が発売された。思い出のゲームでもあり、かつ最近はゲーム欲が盛んなので、僕はこの波に乗じている。XBoxパスというサブスク(1000円/月くらい)に加入していると無料でプレイできるらしいが、一括購入(6000円くらい)もできたのでそちらで購入した。後で知ったんだけど、Discord Nitroの会員に配られるギフトとしてこのパスの2ヶ月間無料コードが届いていたらしい。結構もったいないことをした気がする。
年ぶりの太鼓ともあって結構苦戦している。地力はもちろん低下し、かつ全体の難易度はもちろん上昇しているため、☆9であっても初見だとノルマ落ちしかねない状況だった。ただ、地力を持ち直しつつあり、昔好きだったDoom Noizをはじめとした☆10クリア難易度下位くらいの譜面はなんとかクリアできるようになってきた。今の上位勢は普通に全良するらしい。もっとうまくなりたい。
ゲーム自体は正直安く作られている気がしている。初期の譜面数や全解禁後の譜面数が他と比べて少なく*1、PC版特有の機能もないのでは？と思う。ただ収録曲はかなり良い線を踏んでいる。既存の資産をうまく組み合わせたプロダクトのように見えた。今はDLCの登場を待ち望んでいるところ。
最近音MAD作者の書いているブログを集めている。別記事にするつもりなのであまり詳しく書かないが、自動更新され続けるアンテナを作成するつもり。リストはこちらで一元管理しているので、もし過不足あったらおしえてください。
*1:具体的には10くらい]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[22/2/6 2021年売却コンテンツまとめ]]></title>
        <id>hatenablog://entry/13574176438052195267</id>
        <link href="https://saize-lw.hatenablog.com/entry/2022/02/06/180731"/>
        <updated>2022-02-06T09:07:31.000Z</updated>
        <summary type="html"><![CDATA[駿河屋への売却開始
2021年の中頃から本格的に部屋の整理を始めた。

物を捨てるのを一気にやろうとすると判断に迷って結局あまり進まないことが目に見えているので、数ヶ月スパンで徐々に進める方式を開発した。まず部屋の隅に巨大段ボールを設置し、日常暮らす中で「これは要らんかもしれん」と思うものを放り込み、ある程度溜まってきたら駿河屋に発送。
この手法が画期的なのは巨大段ボールに放り込んだ段階では必ずしも廃棄が確定しているわけではないことだ。どうしても捨てたくないと思えば発送する前にサルベージもできるので、あまり悩まずに気軽に放り込むことができる。ただ一度放り込めば「まあ要らんか」という気分になってくるもので、サルベージを果たしたアイテムはまだ無い。
既に漫画や本や玩具や映画を詰めた大きな段ボール4つほどを駿河屋に送っており、これからも順次送っていく予定である。
整理を始めた積極的な動機は部屋にトレーニング用ベンチを置きたいからだが、消極的な動機としては物理書籍から電子書籍への切り替えが進んでいることがある。特に漫画については電子専用機としてFireHD10も購入し、これからはもう新刊は全部電子でいこうと思っている。
理由を挙げれば、買う手間とか取り回しとか細かいことは諸々あるが、一番大きいのは「物理的なオブジェクトに愛着をあまり持たなくなった」という時代的な感性の変化であろう。令和はクラウド化の時代、大抵のコンテンツはわざわざ所有せずともサブスクでネット上からオンデマンド消費するのが標準となった。漫画は未だ決定版のサブスクサービスが存在せず逐一購入する必要があるとはいえ、だからといって漫画だけが特別に物理的フェチズムを発揮し続けることもない。
そんな経緯で10年以上も部屋の一角を占めていた物品でさえもドンドン段ボールに詰めてバンバン売るモードになっているが、一応は売却目録をメモ…]]></summary>
        <author>
            <name>LWのサイゼリヤ</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[要素の追加・削除と mex を対数時間で処理するよ (2) + 区間 mex クエリ]]></title>
        <id>hatenablog://entry/13574176438060126783</id>
        <link href="https://rsk0315.hatenablog.com/entry/2022/02/05/043902"/>
        <updated>2022-02-04T19:39:02.000Z</updated>
        <summary type="html"><![CDATA[rsk0315.hatenablog.com
エゴサしたらこの記事がわりと読まれているっぽかったものの、やや実装が重い気がしたので*1別の解法を書きます。
tl; dr
セグ木。
定義
有限集合 \(S\subseteq \N\) における mex というのは、\(S\) に含まれない最小の自然数 \(\min_{i\in \N\setminus S} i \) です。
やりたいこと
追加：\(S\gets S\cup\{i\}\) で更新
削除：\(S\gets S\setminus\{i\}\) で更新
mex：\(\min_{i\in \N\setminus S} i\) を出力
これを (amortized) \(O(\log(|S|))\) 時間とかで。
アイディア
クエリ数が \(n\) のときのことを考えます。このとき、mex が \(n\) を超えることはないことに注意します。
\(S = \{0, 1, \dots, n-1\}\) のとき最大値 \(n\) になります。
そこで、bool の配列 \(a = (a_0, a_1, \dots, a_{n-1})\) を \(a_i = (i\in S)\) が保たれるように管理します。
求めたい mex は、\(\wedge_{i\in[0, x)} a_i\) が true になる最大の \(x\) です（このとき \(a_x\) が false となり、定義から \(x\notin S\) となるので）。
よって、\(a\) をセグ木で管理し、この \(x\) を二分探索（ACL で言うところの max_right）で求めればよいです。
\(n\) 以上の値を \(S\) に入れると（クエリ数 \(n\) の下で）mex は \(n\) 未満になることに注意すると、\(n\) 以上の値の更新クエリは無…]]></summary>
        <author>
            <name>えびちゃんの日記</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Over It with Bennett Foddyの字幕をすべて記載したサイトを作った]]></title>
        <id>hatenablog://entry/13574176438058982089</id>
        <link href="https://naari.hatenablog.com/entry/2022/02/01/184330"/>
        <updated>2022-02-01T09:43:30.000Z</updated>
        <summary type="html"><![CDATA[Getting Over Itの字幕をすべて(全言語、全場面のものを)記載したサイトを作った。完全にネタバレありなので、未クリアの人は踏まないほうが良い。
Getting Over It Subtitles
↑これ。
機能として、各Termを言語別で表示/非表示を切り替えられる。また、Termに対して雑なジャンル分けしたので表示するものを絞ることができる。
動機としては3種類あって、以下のような感じ。
日本語の字幕と英語で言っていることがズレているように感じることがあり、でも聞き取れるわけもないから文字起こしを頂いた上で意訳が適切なのかどうかを確かめたい
考察のための足掛かりにしたい
これらの文言をいつでも引用することができる状態にしたい
日本語と英語のズレについては、おそらくプレイしたことのある人で、かつ字幕を見たことがある人なら少し感じるところがあると思う。そもそも日本語としての完成度もちょっと低いし、気になる部分は多かった。例えば、
Maybe this is what this digital culture is.
A monstrous mountain of trash,
the ash-heap of creativity's fountain.
A landfill with everything we ever thought of in it
Grand, infinite, and unsorted.


が
多分これは、このデジタル文化があるものです。
ゴミの巨大な山、
創造性の噴水の灰ヒープ。
私たちが今までそれで考えるすべてのものとの埋立
グランド無限、およびソートされていません。


になるのは、なんというかもうちょっとうまい選択肢はあったんじゃないかと思う。みたいな、そういうもの。揚げ足取り。
考察については単純で、ただただ列挙されているた…]]></summary>
        <author>
            <name>名有りさんの日記</name>
        </author>
    </entry>
</feed>